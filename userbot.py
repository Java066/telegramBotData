from telethon import TelegramClient, events
from datetime import datetime

# üîë –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ
api_id = 24850651
api_hash = '43613f2fdc2777422c6357a018b00070'
receiver_id = -4944695970  # ID –≥—Ä—É–ø–ø—ã –¥–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π

# –ö–ª—é—á–µ–≤—ã–µ —Ñ—Ä–∞–∑—ã –¥–ª—è –ø–æ–∏—Å–∫–∞
keywords = ['–Ω—É–∂–µ–Ω —ç–ª–µ–∫—Ç—Ä–∏–∫', '–∏—â—É —ç–ª–µ–∫—Ç—Ä–∏–∫–∞', '—Ç—Ä–µ–±—É–µ—Ç—Å—è —ç–ª–µ–∫—Ç—Ä–∏–∫']

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞
client = TelegramClient('userbot_session', api_id, api_hash)

@client.on(events.NewMessage)
async def handler(event):
    message = event.message.message.lower()

    # üìü –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ ID —á–∞—Ç–∞ –≤ –∫–æ–Ω—Å–æ–ª—å
    print(f"üìü Chat info ‚Äî ID: {event.chat_id}, Type: {'group/channel' if event.is_group or event.is_channel else 'private'}")

    if any(keyword in message for keyword in keywords):
        try:
            # üìÖ –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è
            now = datetime.now()
            formatted_time = now.strftime("%d.%m.%Y %H:%M")

            chat_name = "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫"
            message_link = "—Å—Å—ã–ª–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
            sender_name = "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
            sender_username = ""

            # üìå –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–º—è —á–∞—Ç–∞ –∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
            if event.is_group or event.is_channel:
                chat = await event.get_chat()
                chat_name = chat.title
                if str(chat.id).startswith("-100"):
                    channel_id = str(chat.id)[4:]
                    message_link = f"https://t.me/c/{channel_id}/{event.message.id}"
                elif hasattr(chat, 'username') and chat.username:
                    message_link = f"https://t.me/{chat.username}/{event.message.id}"
            elif event.sender:
                chat_name = f"{event.sender.first_name} (–ª–∏—á–Ω—ã–π —á–∞—Ç)"

            # üë§ –ü–æ–ª—É—á–∞–µ–º –∏–º—è –∏ username –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
            if event.sender:
                sender = await event.get_sender()
                first = sender.first_name or ""
                last = sender.last_name or ""
                username = f"@{sender.username}" if sender.username else ""
                sender_name = f"{first} {last}".strip()
                sender_username = username

            # ‚úâÔ∏è –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π —á–∞—Ç
            await client.send_message(
                receiver_id,
                f"üì© –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ:\n\n{event.message.message}\n\n"
                f"üìÖ –í—Ä–µ–º—è: {formatted_time}\n"
                f"üë§ –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {sender_name} {sender_username}\n"
                f"üîó –ò–∑ —á–∞—Ç–∞: {chat_name}\n"
                f"üîó –°—Å—ã–ª–∫–∞: {message_link}"
            )

        except Exception as e:
            await client.send_message(receiver_id, f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ:\n{str(e)}")

# ‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ userbot'–∞
print("ü§ñ Userbot –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π...")
client.start()
client.run_until_disconnected()