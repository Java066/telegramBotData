from telethon import TelegramClient
from datetime import datetime
import asyncio

# --- CONFIGURATION ---
api_id = 24850651
api_hash = '43613f2fdc2777422c6357a018b00070'
receiver_id = -4944695970  # –ö—É–¥–∞ –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç

keywords = [
    # üß∞ –≠–ª–µ–∫—Ç—Ä–∏–∫ / Electrician
    "–Ω—É–∂–µ–Ω —ç–ª–µ–∫—Ç—Ä–∏–∫", "–∏—â—É —ç–ª–µ–∫—Ç—Ä–∏–∫–∞", "—Ç—Ä–µ–±—É–µ—Ç—Å—è —ç–ª–µ–∫—Ç—Ä–∏–∫",
    "need electrician", "looking for electrician", "electrician required",
    "power outage", "no electricity", "socket issue", "switch broken",

    # üöø –°–∞–Ω—Ç–µ—Ö–Ω–∏–∫ / Plumber
    "–Ω—É–∂–µ–Ω —Å–∞–Ω—Ç–µ—Ö–Ω–∏–∫", "–∏—â—É —Å–∞–Ω—Ç–µ—Ö–Ω–∏–∫–∞", "—Ç–µ—á—ë—Ç –∫—Ä–∞–Ω", "—Å–ª–æ–º–∞–ª—Å—è –∫—Ä–∞–Ω", "–∑–∞—Å–æ—Ä", "–ø—Ä–æ—Ç–µ—á–∫–∞",
    "need plumber", "plumber required", "leaking tap", "water leakage", "clogged sink", "pipe burst",

    # ‚ùÑÔ∏è –ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä / AC Technician
    "–Ω—É–∂–µ–Ω –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä—â–∏–∫", "—Ä–µ–º–æ–Ω—Ç –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–∞", "—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–∞",
    "–æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–∞", "—á–∏—Å—Ç–∫–∞ –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–∞", "–∑–∞–ø—Ä–∞–≤–∫–∞ —Ñ—Ä–µ–æ–Ω–æ–º",
    "need ac technician", "ac repair", "ac installation", "ac service", "ac cleaning", "freon refill",

    # üî® Handyman / General repair
    "–Ω—É–∂–µ–Ω –º–∞—Å—Ç–µ—Ä", "–Ω—É–∂–µ–Ω handyman", "–º–µ–ª–∫–∏–π —Ä–µ–º–æ–Ω—Ç", "–Ω—É–∂–µ–Ω –ø–ª–æ—Ç–Ω–∏–∫",
    "–ø–æ—á–∏–Ω–∏—Ç—å –¥–≤–µ—Ä—å", "–ø–æ—á–∏–Ω–∏—Ç—å –∑–∞–º–æ–∫", "—Ä–µ–º–æ–Ω—Ç –¥–æ–º–∞", "–º–∞—Å—Ç–µ—Ä –Ω–∞ —á–∞—Å",
    "need handyman", "general repair", "carpenter needed", "door fixing", "lock repair", "small repair job",

    # üì∫ –ú–æ–Ω—Ç–∞–∂ / Installation
    "—É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–ª–µ–≤–∏–∑–æ—Ä–∞", "–ø–æ–≤–µ—Å–∏—Ç—å —Ç–µ–ª–µ–≤–∏–∑–æ—Ä", "—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–∞—Ä–Ω–∏–∑–∞", "–ø–æ–≤–µ—Å–∏—Ç—å –∫–∞—Ä–Ω–∏–∑",
    "mount tv", "tv installation", "install curtain", "curtain fixing", "wall mounting",

    # üí° –û—Å–≤–µ—â–µ–Ω–∏–µ / Lighting & Electrical
    "—Å–ª–æ–º–∞–ª—Å—è –≤—ã–∫–ª—é—á–∞—Ç–µ–ª—å", "–Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ä–æ–∑–µ—Ç–∫–∞", "–Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–≤–µ—Ç",
    "–∑–∞–º–µ–Ω–∞ –ª–∞–º–ø—ã", "—É—Å—Ç—Ä–∞–Ω–∏—Ç—å –∫–æ—Ä–æ—Ç–∫–æ–µ –∑–∞–º—ã–∫–∞–Ω–∏–µ",
    "switch not working", "no light", "replace bulb", "short circuit",

    # üö™ –î–≤–µ—Ä–∏ / Furniture
    "—Å–ª–æ–º–∞–ª–∞—Å—å –¥–≤–µ—Ä—å", "–ø–æ—á–∏–Ω–∏—Ç—å –º–µ–±–µ–ª—å", "hinge broken", "door alignment", "furniture repair",

    # üÜò –û–±—â–∏–µ
    "—Å—Ä–æ—á–Ω–æ –º–∞—Å—Ç–µ—Ä", "emergency repair", "urgent handyman", "quick fix"
]

message_check_limit = 5000
search_interval_seconds = 1800  # 30 –º–∏–Ω—É—Ç

client = TelegramClient('userbot_session', api_id, api_hash)
last_seen_ids = {}

# --- CORE FUNCTION ---
async def search_in_chats():
    async for dialog in client.iter_dialogs():
        chat_id = dialog.id

        # üö´ –ò—Å–∫–ª—é—á–∞–µ–º —Ç–æ–ª—å–∫–æ —á–∞—Ç-–ø–æ–ª—É—á–∞—Ç–µ–ª—å
        if chat_id == receiver_id:
            continue

        try:
            print(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–∞—Ç–∞: {dialog.name} ({chat_id})")

            async for message in client.iter_messages(chat_id, limit=message_check_limit):
                if message.id <= last_seen_ids.get(chat_id, 0):
                    break  # —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ

                if message.message:
                    matched_keyword = next((k for k in keywords if k in message.message.lower()), None)

                    if matched_keyword:
                        now = datetime.now().strftime("%d.%m.%Y %H:%M")
                        sender = await message.get_sender()

                        # üîê –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
                        if hasattr(sender, 'first_name') or hasattr(sender, 'last_name'):
                            sender_name = f"{getattr(sender, 'first_name', '')} {getattr(sender, 'last_name', '')}".strip()
                        elif hasattr(sender, 'title'):
                            sender_name = sender.title
                        else:
                            sender_name = '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å'

                        username = f"@{sender.username}" if getattr(sender, 'username', None) else ""
                        chat_name = dialog.name
                        link = f"https://t.me/c/{str(chat_id)[4:]}/{message.id}" if str(chat_id).startswith('-100') else "—Å—Å—ã–ª–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"

                        # üì§ –ü–æ–ø—Ä–æ–±—É–µ–º –ø–µ—Ä–µ—Å–ª–∞—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                        try:
                            await client.forward_messages(receiver_id, message)
                            await asyncio.sleep(1)  # –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
                        except Exception as e:
                            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ—Å–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∫ —Ç–µ–∫—Å—Ç. –ü—Ä–∏—á–∏–Ω–∞: {e}")
                            await client.send_message(
                                receiver_id,
                                f"üì© –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É:\n\n{message.message}\n\n"
                                f"üß© –°–æ–≤–ø–∞–¥–µ–Ω–∏–µ: {matched_keyword}\n"
                                f"üìÖ –í—Ä–µ–º—è: {now}\n"
                                f"üë§ –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {sender_name} {username}\n"
                                f"üîó –ò–∑ —á–∞—Ç–∞: {chat_name}\n"
                                f"üîó –°—Å—ã–ª–∫–∞: {link}"
                            )

                last_seen_ids[chat_id] = max(last_seen_ids.get(chat_id, 0), message.id)

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ö–æ–¥–µ —á–∞—Ç–∞ {chat_id}: {e}")

    print(f"‚úÖ –ó–∞–≤–µ—Ä—à—ë–Ω –æ–±—Ö–æ–¥ –≤: {datetime.now().strftime('%d.%m.%Y %H:%M:%S')}")

# --- SCHEDULER ---
async def scheduler():
    while True:
        await search_in_chats()
        await asyncio.sleep(search_interval_seconds)

# --- MAIN ---
async def main():
    await client.start()
    print("ü§ñ Userbot –∑–∞–ø—É—â–µ–Ω. –ò–¥—ë—Ç –ø–æ–∏—Å–∫ –ø–æ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π...")
    await scheduler()

client.loop.run_until_complete(main())