from telethon import TelegramClient
from datetime import datetime
import asyncio

# --- CONFIGURATION ---
api_id = 24850651
api_hash = '43613f2fdc2777422c6357a018b00070'
receiver_id = -4944695970  # –ö—É–¥–∞ –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç

keywords = ['–Ω—É–∂–µ–Ω —ç–ª–µ–∫—Ç—Ä–∏–∫', '–∏—â—É —ç–ª–µ–∫—Ç—Ä–∏–∫–∞', '—Ç—Ä–µ–±—É–µ—Ç—Å—è —ç–ª–µ–∫—Ç—Ä–∏–∫''.']
message_check_limit = 5000
search_interval_seconds = 1800  # 30 –º–∏–Ω—É—Ç

client = TelegramClient('userbot_session', api_id, api_hash)
last_seen_ids = {}

# --- CORE FUNCTION ---
async def search_in_chats():
    async for dialog in client.iter_dialogs():
        chat_id = dialog.id
        try:
            print(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–∞—Ç–∞: {dialog.name} ({chat_id})")

            async for message in client.iter_messages(chat_id, limit=message_check_limit):
                if message.id <= last_seen_ids.get(chat_id, 0):
                    break  # —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ

                if message.message:
                    matched_keyword = next((k for k in keywords if k in message.message.lower()), None)

                    if matched_keyword:
                        now = datetime.now().strftime("%d.%m.%Y %H:%M")
                        sender = await message.get_sender()

                        # üîê –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
                        if hasattr(sender, 'first_name') or hasattr(sender, 'last_name'):
                            sender_name = f"{getattr(sender, 'first_name', '')} {getattr(sender, 'last_name', '')}".strip()
                        elif hasattr(sender, 'title'):
                            sender_name = sender.title  # –∏–º—è –∫–∞–Ω–∞–ª–∞
                        else:
                            sender_name = '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å'

                        username = f"@{sender.username}" if getattr(sender, 'username', None) else ""
                        chat_name = dialog.name
                        link = f"https://t.me/c/{str(chat_id)[4:]}/{message.id}" if str(chat_id).startswith('-100') else "—Å—Å—ã–ª–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"

                        await client.send_message(
                            receiver_id,
                            f"üì© –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É:\n\n{message.message}\n\n"
                            f"üß© –°–æ–≤–ø–∞–¥–µ–Ω–∏–µ: {matched_keyword}\n"
                            f"üìÖ –í—Ä–µ–º—è: {now}\n"
                            f"üë§ –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {sender_name} {username}\n"
                            f"üîó –ò–∑ —á–∞—Ç–∞: {chat_name}\n"
                            f"üîó –°—Å—ã–ª–∫–∞: {link}"
                        )

                last_seen_ids[chat_id] = max(last_seen_ids.get(chat_id, 0), message.id)

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ö–æ–¥–µ —á–∞—Ç–∞ {chat_id}: {e}")

    print(f"‚úÖ –ó–∞–≤–µ—Ä—à—ë–Ω –æ–±—Ö–æ–¥ –≤: {datetime.now().strftime('%d.%m.%Y %H:%M:%S')}")

# --- SCHEDULER ---
async def scheduler():
    while True:
        await search_in_chats()
        await asyncio.sleep(search_interval_seconds)

# --- MAIN ---
async def main():
    await client.start()
    print("ü§ñ Userbot –∑–∞–ø—É—â–µ–Ω. –ò–¥—ë—Ç –ø–æ–∏—Å–∫ –ø–æ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π...")
    await scheduler()

client.loop.run_until_complete(main())